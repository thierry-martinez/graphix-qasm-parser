[project]
name = "graphix-qasm-parser"
authors = [
    { name = "Thierry Martinez", email = "Thierry.Martinez@inria.fr" },
]
maintainers = [
    { name = "Thierry Martinez", email = "Thierry.Martinez@inria.fr" },
]
license-files = ["LICENSE"]
version = "1"
dynamic = ["dependencies"]

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
# Allow "α" (U+03B1 GREEK SMALL LETTER ALPHA) which could be confused for "a"
# Allow "×" (U+00D7 MULTIPLICATION SIGN) which could be confused for "x"
allowed-confusables = ["α", "×"]
extend-ignore = [
    "D203", # `incorrect-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible.
    "D212", # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible.
    "COM812", # The following rule may cause conflicts when used with the formatter: `COM812`.
    "PLR2004", # Magic value used in comparison
    "E501", # Line too long
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = [
    "S101", # Use of `assert`
]

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
# Keep in sync with pyright
files = ["*.py", "graphix_qasm_parser"]
ignore_missing_imports = true
follow_untyped_imports = true
strict = true

[tool.pyright]
# Keep in sync with pyright
files = ["*.py", "graphix_qasm_parser"]
typeCheckingMode = "strict"
# Disable the following errors while graphix stub is not available
reportMissingImports = "none"
reportMissingTypeStubs = "none"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "none"
reportUnknownArgumentType = "none"
# reportUnknownArgumentType = "information"
reportUnknownLambdaType = "information"
#reportUnknownMemberType = "information"
# reportUnknownParameterType = "information"
# reportUnknownVariableType = "information"
